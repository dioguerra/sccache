# Default values for sccache.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

scheduler:
  service:
    type: ClusterIP
    port: 10600

server:
  service:
    type: ClusterIP
    port: 10501

authentication:
  scheduler:
    type: token
    # token:
  client:
    # type one of [token, proxy_token]
    type: "proxy_token"
    # token: wmHETENXchg8SEHnJjhajG8j2RlEkNQ9a1SHuqD8peiAmTvmjOPm5I6Z0y9rgSYSaYw2rnt7u7yqpkfB7qICMshawJHasz6KO9nXT57GvSGMzYQolkoqzhWBObAbUeNm
    proxy_token:
      # dict with values from https://github.com/mozilla/sccache/blob/main/docs/Distributed.md#oauth2
      url: "https://keycloak-qa.cern.ch/auth/realms/cern"
      cache_secs: 3600

replicaCount: 1

image:
  repository: registry.cern.ch/dtomasgu/sccache-dist
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    # TODO: Try this for now. check how we can create usernamespaces from unpriviledged account after.
    # https://kubernetes.io/docs/concepts/workloads/pods/user-namespaces/
    # Error from server side: Res 563 error: run build failed, caused by: Compilation execution failed, caused by: Failed to enter a new Linux namespace, caused by: EPERM: Operation not permitted
    add:
    - CAP_SYS_ADMIN
    # drop:
    # - ALL
  runAsUser: 0
  runAsGroup: 0
  privileged: true
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
